/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package modular_stream;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.GridLayout;
import java.awt.Window;
import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;
import javax.swing.SwingUtilities;

/**
 *
 * @author Amir72c
 */
public class StreamNodeDialog extends javax.swing.JDialog implements Externalizable{

    Frame myParentFrame;
    GridLayout myLayout;
    StreamNode myNodeParent;

    /**
     * Creates new form StreamNodeDialog
     */
    public StreamNodeDialog(java.awt.Frame parent, StreamNode Node, boolean modal) {
        super(parent, modal);
        myParentFrame = parent;
        myNodeParent = Node;
        initComponents();
        myLayout = new GridLayout(1, 1);
        AllOutputs.setLayout(myLayout);
        AllOutputs.add(new OutputPanel(myParentFrame, myNodeParent, 0));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        inputList = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        AllOutputs = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        InputNumber = new javax.swing.JSpinner();
        OutputNumber = new javax.swing.JSpinner();
        Confirm = new javax.swing.JButton();
        Cancel = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        inputList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(inputList);

        javax.swing.GroupLayout AllOutputsLayout = new javax.swing.GroupLayout(AllOutputs);
        AllOutputs.setLayout(AllOutputsLayout);
        AllOutputsLayout.setHorizontalGroup(
            AllOutputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 778, Short.MAX_VALUE)
        );
        AllOutputsLayout.setVerticalGroup(
            AllOutputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 342, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(AllOutputs);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Config"));

        jLabel2.setText("Number of input Channels:");

        jLabel3.setText("Number of output Channels:");

        InputNumber.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(0), null, Integer.valueOf(1)));
        InputNumber.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                InputNumberStateChanged(evt);
            }
        });

        OutputNumber.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(0), null, Integer.valueOf(1)));
        OutputNumber.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                OutputNumberStateChanged(evt);
            }
        });

        Confirm.setText("Ok");
        Confirm.setEnabled(false);
        Confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmActionPerformed(evt);
            }
        });

        Cancel.setText("Cancel");
        Cancel.setEnabled(false);
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(InputNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addComponent(OutputNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Confirm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Cancel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(InputNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(OutputNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Confirm)
                    .addComponent(Cancel))
                .addContainerGap())
        );

        jButton1.setText("Rename");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Change graphics");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void InputNumberStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_InputNumberStateChanged
        // TODO add your handling code here:
        Confirm.setEnabled(true);
        Cancel.setEnabled(true);
    }//GEN-LAST:event_InputNumberStateChanged

    private void OutputNumberStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_OutputNumberStateChanged
        // TODO add your handling code here:
        Confirm.setEnabled(true);
        Cancel.setEnabled(true);
    }//GEN-LAST:event_OutputNumberStateChanged

    private void ConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmActionPerformed
        // TODO add your handling code here:
        int currentOutputs = AllOutputs.getComponentCount();
        Component[] temp_components = AllOutputs.getComponents();
        OutputPanel[] allOutputs = new OutputPanel[currentOutputs];
        for (int i = 0; i < currentOutputs; i++) {
            allOutputs[i] = (OutputPanel) temp_components[i];
        }
//        boolean isAutoConfirmed = true;
//        EditOkCancelDialog temp_dialog = new EditOkCancelDialog(myParentFrame, true);
//        if ((int) OutputNumber.getValue() < currentOutputs) {
//            for (int i = currentOutputs - 1; i > (int) OutputNumber.getValue(); i--) {
//                if (allOutputs[i].isEditted == true) {
//                    temp_dialog.setVisible(true);
//                    isAutoConfirmed = false;
//                    break;
//                }
//            }
//        }
//        if (temp_dialog.getReturnStatus() == 1 || isAutoConfirmed == true) {
            if ((int) OutputNumber.getValue() < currentOutputs && (int) OutputNumber.getValue() > 0) {
                for (int i = currentOutputs - 1; i > (int) OutputNumber.getValue()-1; i--) {
                    AllOutputs.remove(i);
                }
            } else if ((int) OutputNumber.getValue() == 0) {
                AllOutputs.removeAll();
            } else if ((int) OutputNumber.getValue() > currentOutputs) {
                for (int i = currentOutputs; i < (int) OutputNumber.getValue(); i++) {
                    AllOutputs.add(new OutputPanel(myParentFrame, myNodeParent, i));
                }
            }
            AllOutputs.setPreferredSize(new Dimension(OutputPanel.width, (int) (OutputNumber.getValue()) * OutputPanel.height));
            myLayout.setRows((int) OutputNumber.getValue());
            myNodeParent.numInput = (int) InputNumber.getValue();
            myNodeParent.numOutput = (int) OutputNumber.getValue();
            myNodeParent.InitChannels();
//        }
        Confirm.setEnabled(false);
        Cancel.setEnabled(false);
        myNodeParent.mySteamPanelParent.root_timer.my_root_meta_parent.refreshGlobals();
    }//GEN-LAST:event_ConfirmActionPerformed

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        // TODO add your handling code here:
        InputNumber.setValue(myNodeParent.numInput);
        OutputNumber.setValue(myNodeParent.numOutput);
        Confirm.setEnabled(false);
        Cancel.setEnabled(false);
    }//GEN-LAST:event_CancelActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        InputNumber.setValue(myNodeParent.numInput);
        OutputNumber.setValue(myNodeParent.numOutput);
        Confirm.setEnabled(false);
        Cancel.setEnabled(false);
    }//GEN-LAST:event_formWindowClosing

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Window parentWindow = SwingUtilities.windowForComponent(this);
        RenameDialog renameDialog = new RenameDialog((Frame) parentWindow, true, myNodeParent);
        renameDialog.setVisible(true);

    }//GEN-LAST:event_jButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel AllOutputs;
    private javax.swing.JButton Cancel;
    private javax.swing.JButton Confirm;
    private javax.swing.JSpinner InputNumber;
    private javax.swing.JSpinner OutputNumber;
    private javax.swing.JList inputList;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    @Override
    public void writeExternal(ObjectOutput out) throws IOException {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
