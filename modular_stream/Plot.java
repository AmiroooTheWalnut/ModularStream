/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package modular_stream;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;

/**
 *
 * @author Amir72c
 */
public class Plot extends javax.swing.JPanel {

    Plot thisPlot=this;
    double[] allData;
    double maxValue=10;
    double minValue=0;
    
    /**
     * Creates new form Plot
     */
    public Plot() {
        initComponents();
        allData=new double[10];
    }
    
    public void getData(double[] passedData)
    {
        allData=passedData;
        maxValue=findMax(allData);
        minValue=findMin(allData);
    }
    
    public double findMax(double[] passedData)
    {
        double max=Double.NEGATIVE_INFINITY;
        for(int i=0;i<passedData.length;i++)
        {
            if(passedData[i]>max)
            {
                max=passedData[i];
            }
        }
        return max;
    }
    
    public double findMin(double[] passedData)
    {
        double min=Double.POSITIVE_INFINITY;
        for(int i=0;i<passedData.length;i++)
        {
            if(passedData[i]<min)
            {
                min=passedData[i];
            }
        }
        return min;
    }
    
    @Override
    public void paintComponent(Graphics g) {
        int actual_width=thisPlot.getWidth()-20-5;
        int actual_height=thisPlot.getHeight()-5-10;
        double verticalAspect=((double)actual_height/(double)(maxValue-minValue));
        double horizontalAspect=((double)actual_width/(double)(allData.length));
        for(int i=allData.length-1;i>0;i--)
        {
            g.setColor(new Color((int)((((float)i/(float)allData.length)*255)), (int)(255-(((float)i/(float)allData.length)*255)), 5));
            g.drawLine((int)(20+i*horizontalAspect),(int)(minValue*verticalAspect+thisPlot.getHeight()-13), (int)(20+i*horizontalAspect), (int)((minValue*verticalAspect+thisPlot.getHeight()-13)-(allData[i]*verticalAspect)));
        }
        g.setColor(Color.BLACK);
        g.drawLine(20, 5 , 20, thisPlot.getHeight()-12);
        g.drawLine(20, thisPlot.getHeight()-12 , thisPlot.getWidth()-5, thisPlot.getHeight()-12);
        int horzontalTickNumber=5;
        int horizontalStep=actual_width/horzontalTickNumber;
        g.setColor(Color.BLUE);
        for(int i=1;i<=horzontalTickNumber;i++)
        {
            int tempwidth = (int) new FontMetrics(new Font("SansSerif", Font.PLAIN, 12)) {
                }.getStringBounds(String.valueOf((allData.length/horzontalTickNumber)*i), null).getWidth();
            g.drawLine(20+horizontalStep*i, thisPlot.getHeight()-8, 20+horizontalStep*i, thisPlot.getHeight()-12);
            g.drawString(String.valueOf((allData.length/horzontalTickNumber)*i), 20+horizontalStep*i - tempwidth, thisPlot.getHeight());
        }
        int verticalTickNumber=5;
        int verticalStep=actual_height/verticalTickNumber;
        for(int i=0;i<=verticalTickNumber;i++)
        {
            int tempwidth = (int) new FontMetrics(new Font("SansSerif", Font.PLAIN, 12)) {
                }.getStringBounds(String.valueOf((allData.length/horzontalTickNumber)*i), null).getWidth();
            g.drawLine(18, 5+verticalStep*i,22 , 5+verticalStep*i);
            g.drawString(String.valueOf(Math.round((float)(minValue+((maxValue-minValue)/verticalTickNumber)*(verticalTickNumber-i))*100)/(float)100), 0 , 10+verticalStep*i);
        }
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
