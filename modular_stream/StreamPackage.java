/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package modular_stream;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.util.concurrent.Callable;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;

/**
 *
 * @author Amir72c
 */
public class StreamPackage extends javax.swing.JPanel {

    TimerDialog my_timer;
    StreamPanel root_stream_panel;
    Thread my_view3d_thread;
    View3D app;
    StreamPanel currentStreamPanel;

    /**
     * Creates new form StreamPackage
     */
    public StreamPackage() {
        initComponents();
        mainStreamPanel.setLayout(null);
        streamShowcase.CurrentCanvas = mainStreamPanel;
        currentStreamPanel = mainStreamPanel;
        root_stream_panel = mainStreamPanel;
        mainStreamPanel.isRootStreamPanel = true;
        mainStreamPanel.metaParent = this;
        mainStreamPanel.mainStreamScrollPane = streamScrollPane;
        mainStreamPanel.mainStreamShowcase = streamShowcase;
        mainStreamPanel.mainToolBar = toolBar;
        JFrame topFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
        my_timer = new TimerDialog(topFrame, false, root_stream_panel);
        mainStreamPanel.root_timer = my_timer;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        streamShowcase = new modular_stream.Showcase();
        streamScrollPane = new javax.swing.JScrollPane();
        mainStreamPanel = new modular_stream.StreamPanel();
        toolBar = new javax.swing.JToolBar();
        isvisible_link = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        isvisible_timer = new javax.swing.JToggleButton();
        start_view3d = new javax.swing.JButton();
        zoomin = new javax.swing.JButton();
        zoomout = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        streamScrollPane.setViewportView(mainStreamPanel);

        toolBar.setFloatable(false);
        toolBar.setRollover(true);

        isvisible_link.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/main_arrow.png"))); // NOI18N
        isvisible_link.setSelected(true);
        isvisible_link.setText("Links");
        isvisible_link.setToolTipText("");
        isvisible_link.setFocusable(false);
        isvisible_link.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        isvisible_link.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        isvisible_link.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isvisible_linkActionPerformed(evt);
            }
        });
        toolBar.add(isvisible_link);

        jToggleButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/dummy_arrow.png"))); // NOI18N
        jToggleButton2.setSelected(true);
        jToggleButton2.setText("Dummy links");
        jToggleButton2.setFocusable(false);
        jToggleButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(jToggleButton2);

        isvisible_timer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/timer.png"))); // NOI18N
        isvisible_timer.setText("Timer panel");
        isvisible_timer.setFocusable(false);
        isvisible_timer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        isvisible_timer.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        isvisible_timer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isvisible_timerActionPerformed(evt);
            }
        });
        toolBar.add(isvisible_timer);

        start_view3d.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/3d_view.png"))); // NOI18N
        start_view3d.setText("3D view");
        start_view3d.setFocusable(false);
        start_view3d.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        start_view3d.setIconTextGap(0);
        start_view3d.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        start_view3d.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                start_view3dActionPerformed(evt);
            }
        });
        toolBar.add(start_view3d);
        start_view3d.getAccessibleContext().setAccessibleDescription("");

        zoomin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifier_zoom_in.png"))); // NOI18N
        zoomin.setEnabled(false);
        zoomin.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        zoomin.setName("zoomin"); // NOI18N
        zoomin.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        zoomin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                zoominFocusGained(evt);
            }
        });
        toolBar.add(zoomin);

        zoomout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/magnifier_zoom_out.png"))); // NOI18N
        zoomout.setEnabled(false);
        zoomout.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        zoomout.setName("zoomout"); // NOI18N
        zoomout.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        zoomout.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                zoomoutFocusGained(evt);
            }
        });
        toolBar.add(zoomout);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/load.png"))); // NOI18N
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(jButton2);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        toolBar.add(jButton1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(streamShowcase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(streamScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE))
                    .addComponent(toolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(toolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(streamShowcase, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                    .addComponent(streamScrollPane))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void isvisible_linkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isvisible_linkActionPerformed
        // TODO add your handling code here:
        //if(my_main_canvas!=null)
        //{
        //    my_main_canvas.isvisible_link=isvisible_link.isSelected();
        //}
    }//GEN-LAST:event_isvisible_linkActionPerformed

    private void isvisible_timerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isvisible_timerActionPerformed
        // TODO add your handling code here:
        my_timer.setVisible(isvisible_timer.isSelected());
    }//GEN-LAST:event_isvisible_timerActionPerformed

    private void start_view3dActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_start_view3dActionPerformed
        // TODO add your handling code here:
        //if(my_main_canvas!=null)
        //{
        //    my_main_canvas.start_view3d();
        //}
        currentStreamPanel.start_view3d();
    }//GEN-LAST:event_start_view3dActionPerformed

    private void zoominFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_zoominFocusGained
        // TODO add your handling code here:
        StreamCanvas temp = (StreamCanvas) evt.getOppositeComponent();
        currentStreamPanel = temp.my_StreamPanel;
        streamScrollPane.setViewportView(currentStreamPanel);
        currentStreamPanel.mainStreamShowcase.CurrentCanvas = currentStreamPanel;
        if (my_view3d_thread != null) {
            app.enqueue(new Callable() {
                public Object call() throws Exception {
                    // call methods that modify the scene graph here
                    currentStreamPanel.view3d_data_generation();
                    app.getting_data(currentStreamPanel.objects_names, currentStreamPanel.objects_positions);
                    app.my_simpleInitApp();
                    return null;
                }
            });
        }
    }//GEN-LAST:event_zoominFocusGained

    private void zoomoutFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_zoomoutFocusGained
        // TODO add your handling code here:
        StreamPanel temp = (StreamPanel) evt.getOppositeComponent();
        currentStreamPanel = temp.myCanvasParent.mySteamPanelParent;
        streamScrollPane.setViewportView(temp.myCanvasParent.mySteamPanelParent);
        streamShowcase.CurrentCanvas = temp.myCanvasParent.mySteamPanelParent;
        if (my_view3d_thread != null) {
            app.enqueue(new Callable() {
                public Object call() throws Exception {
                    // call methods that modify the scene graph here
                    currentStreamPanel.view3d_data_generation();
                    app.getting_data(currentStreamPanel.objects_names, currentStreamPanel.objects_positions);
                    app.my_simpleInitApp();
                    return null;
                }
            });
        }
    }//GEN-LAST:event_zoomoutFocusGained

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fc_save = new JFileChooser();
        //fc_save.setFileFilter(new FileNameExtensionFilter("NC file", "nc"));
        fc_save.setAcceptAllFileFilterUsed(false);
        int returnVal = fc_save.showSaveDialog(this);
        //String[] save_exts = ((FileNameExtensionFilter)fc_save.getFileFilter()).getExtensions();
        //String save_final_exts = save_exts[0];
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            String file_name = fc_save.getSelectedFile().getName();
            String save_file_path = fc_save.getSelectedFile().getAbsolutePath();
            try {
                FileOutputStream f_out;
                try {
                    f_out = new FileOutputStream(save_file_path + ".csim");
                    ObjectOutputStream obj_out;
                    try {
                        obj_out = new ObjectOutputStream(f_out);
                        obj_out.writeObject(mainStreamPanel);
                    } catch (IOException ex) {
//                        Logger.getLogger(StoreProcessedData.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } catch (FileNotFoundException ex) {
//                    Logger.getLogger(StoreProcessedData.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (Exception ex) {
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton isvisible_link;
    public javax.swing.JToggleButton isvisible_timer;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JToggleButton jToggleButton2;
    private modular_stream.StreamPanel mainStreamPanel;
    private javax.swing.JButton start_view3d;
    private javax.swing.JScrollPane streamScrollPane;
    private modular_stream.Showcase streamShowcase;
    private javax.swing.JToolBar toolBar;
    private javax.swing.JButton zoomin;
    private javax.swing.JButton zoomout;
    // End of variables declaration//GEN-END:variables
}
