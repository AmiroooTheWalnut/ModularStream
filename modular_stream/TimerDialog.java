/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package modular_stream;

import Simulation.GlobalHandler;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

/**
 *
 * @author Amir72c
 */
public class TimerDialog extends javax.swing.JDialog {
    
    StreamPanel my_root_meta_parent;
    Timer sim_timer;
    public GlobalHandler Globals=new GlobalHandler();
    public int current_time[]=new int[1];
    
    //JTextArea code_sources[];
    //Script compiled_simboxes[];

    /**
     * Creates new form Timer_dialog
     */
    public TimerDialog(java.awt.Frame parent, boolean modal, StreamPanel root_meta_parent) {
        super(parent, modal);
        my_root_meta_parent=root_meta_parent;
        initComponents();
        //Globals.put("Time", current_time);
        current_time[0]=0;
        Globals.names.add("Time");
        Globals.values.add(current_time);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        speed_slider = new javax.swing.JSlider();
        timer_show = new javax.swing.JTextField();
        reset = new javax.swing.JButton();
        sim_start = new javax.swing.JToggleButton();

        speed_slider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                speed_sliderMouseClicked(evt);
            }
        });
        speed_slider.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                speed_sliderMouseDragged(evt);
            }
        });

        timer_show.setText("0");

        reset.setText("reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        sim_start.setText("Start");
        sim_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sim_startActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sim_start, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(timer_show, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(speed_slider, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sim_start, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reset))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timer_show, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(speed_slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void speed_sliderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_speed_sliderMouseClicked
        // TODO add your handling code here:
        if(sim_timer!=null)
        {
            sim_timer.setDelay(speed_slider.getValue()*10);
        }
        
    }//GEN-LAST:event_speed_sliderMouseClicked

    private void speed_sliderMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_speed_sliderMouseDragged
        // TODO add your handling code here:
        if(sim_timer!=null)
        {
            sim_timer.setDelay(speed_slider.getValue()*10);
        }
    }//GEN-LAST:event_speed_sliderMouseDragged

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        current_time[0]=0;
        //Globals.put("Time", current_time);
        
        timer_show.setText(Integer.toString(current_time[0]));
        //for(int i=0;i<my_canvas_parent.my_num_sim_box;i++)
        //{
        //    my_canvas_parent.my_all_sim_boxes[i].refresh_variables();
        //}
    }//GEN-LAST:event_resetActionPerformed

    private void sim_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sim_startActionPerformed
        // TODO add your handling code here:
        
        if(sim_start.isSelected()==true)
        {
            /*
            compiled_simboxes=new Script[my_canvas_parent.my_num_sim_box];
            my_canvas_parent.my_parent.main_binding.setVariable("Simbox",my_canvas_parent.my_all_sim_boxes);
            for(int i=0;i<my_canvas_parent.my_num_sim_box;i++)
            {
                String temp_string="import java.math.*;";
                for(int k=0;k<my_canvas_parent.my_all_sim_boxes[i].num_output;k++)
                {
                    if(my_canvas_parent.my_all_sim_boxes[i].isdescrete_output[k]==false)
                    {
                        if(my_canvas_parent.my_all_sim_boxes[i].signal_expression[k].length()>0)
                        {
                            temp_string=temp_string+"def signal_eval"+k+"(first_value){final_value="+my_canvas_parent.my_all_sim_boxes[i].signal_expression[k]+";return final_value;};";
                        }else{temp_string=temp_string+"def signal_eval"+k+"(first_value){final_value=null;return final_value;};";}
                        if(my_canvas_parent.my_all_sim_boxes[i].output_expression[k].length()>0)
                        {
                            temp_string=temp_string+"def output_eval"+k+"(first_value){final_value="+my_canvas_parent.my_all_sim_boxes[i].output_expression[k]+";return final_value;};";
                        }else{temp_string=temp_string+"def output_eval"+k+"(first_value){final_value=null;return final_value;};";}
                        if(my_canvas_parent.my_all_sim_boxes[i].constraint_expression[k].length()>0)
                        {
                            temp_string=temp_string+"def constraint_eval"+k+"(first_value){final_value="+my_canvas_parent.my_all_sim_boxes[i].constraint_expression[k]+";return final_value;};";
                        }else{temp_string=temp_string+"def constraint_eval"+k+"(first_value){final_value=null;return final_value;};";}
                    }else{
                        temp_string=temp_string+"def output_eval"+k+"(first_value){final_value="+my_canvas_parent.my_all_sim_boxes[i].output_discrete_amount[k]+";return final_value;};";
                    }
                    
                    
                }
                //System.out.println(Math.pow(i, i));
                compiled_simboxes[i]=my_canvas_parent.my_parent.main_shell.parse(temp_string);
            }
            */
            my_root_meta_parent.parseStreamPanel();
            System.out.println("STARTED!");
            sim_start.setText("End");
            sim_timer = new Timer(1,new ActionListener() {

                    public void actionPerformed(ActionEvent e) {
                        //System.out.println("one step");
                        current_time[0]=current_time[0]+1;
                        //Globals.put("Time", current_time);
                        timer_show.setText(Integer.toString(current_time[0]));
                        //for(int i=0;i<my_canvas_parent.my_num_sim_box;i++)
                        //{
                        //    my_canvas_parent.my_all_sim_boxes[i].active_sim_box(current_time);
                        //}
                        //for(int i=0;i<my_canvas_parent.my_num_plot_hist;i++)
                        //{
                        //    my_canvas_parent.my_all_plot_hist[i].active_plot_hist(current_time);
                        //    my_canvas_parent.my_all_plot_hist[i].repaint();
                        //}
                        my_root_meta_parent.activateStream();
                    }
                });
            sim_timer.setDelay(speed_slider.getValue()*10);
            sim_timer.start();
            
        }else{
            System.out.println("ENDED!");
            sim_start.setText("Start");
            sim_timer.stop();
        }
    }//GEN-LAST:event_sim_startActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TimerDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TimerDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TimerDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TimerDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton reset;
    private javax.swing.JToggleButton sim_start;
    private javax.swing.JSlider speed_slider;
    private javax.swing.JTextField timer_show;
    // End of variables declaration//GEN-END:variables

    
    
}
