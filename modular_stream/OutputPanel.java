/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package modular_stream;

import Simulation.AgentBasedSimulation.AgentMain;
import Simulation.ContinuousSimulation.ContinuousOutput;
import Simulation.CustomJavaSimulation.CustomJavaOutput;
import Simulation.DiscreteSimulation.DiscreteOutput;
import Simulation.NativeSimulation.NativeOutput;
import Simulation.SystemDynamics.SystemDynamicOutput;
import java.awt.BorderLayout;
import java.awt.Frame;

/**
 *
 * @author Amir72c
 */
public class OutputPanel extends javax.swing.JPanel {

    public static int width = 450;
    public static int height = 350;
    Frame myParentFrame;
    StreamNode myNodeParent;
    Kernel myKernel;
    int myOrder;
    boolean isGlobal=false;
    

    /**
     * Creates new form OutputPanel
     */
    public OutputPanel(java.awt.Frame parent,StreamNode Node, int order) {
        initComponents();
        myParentFrame = parent;
        myNodeParent = Node;
        //this.setBounds(0, height*order+5,width , height);
        Name.setText("Output Channel" + (order + 1));
        this.setVisible(true);
        jPanel1.setLayout(new BorderLayout());
        myOrder=order;
    }
    boolean isEditted = false;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        Name = new javax.swing.JLabel();
        IsGlobal = new javax.swing.JCheckBox();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Kernel"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 377, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 184, Short.MAX_VALUE)
        );

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "Discrete output", "Continuous output", "System dynamics", "Agent-based Simulation", "Custom Java package", "Native DLL" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Kernel type:");

        Name.setText("jLabel2");

        IsGlobal.setText("Is global");
        IsGlobal.setEnabled(false);
        IsGlobal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IsGlobalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Name)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(IsGlobal)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Name)
                    .addComponent(IsGlobal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        int isOk = 1;
        if (isEditted == true) {
            EditOkCancelDialog temp_dialog = new EditOkCancelDialog(myParentFrame, true);
            temp_dialog.setVisible(true);
            isOk = temp_dialog.getReturnStatus();
        }
        if (isOk == 1) {
            System.out.println((String) jComboBox1.getSelectedItem());
            switch ((String) jComboBox1.getSelectedItem()) {
                case "None":
                    jPanel1.removeAll();
                    IsGlobal.setEnabled(false);
                    break;
                case "Discrete output":
                    jPanel1.removeAll();
                    DiscreteOutput discreteKernel = new Simulation.DiscreteSimulation.DiscreteOutput(myNodeParent,myNodeParent.inputData);
                    jPanel1.add(discreteKernel);
                    myKernel=discreteKernel;
                    myNodeParent.nodeDialog.AllOutputs.revalidate();
                    myNodeParent.nodeDialog.AllOutputs.repaint();
                    IsGlobal.setEnabled(true);
                    break;
                case "Continuous output":
                    jPanel1.removeAll();
                    ContinuousOutput continuousKernel = new Simulation.ContinuousSimulation.ContinuousOutput(myNodeParent,myNodeParent.inputData);
                    jPanel1.add(continuousKernel);
                    myKernel=continuousKernel;
                    myNodeParent.nodeDialog.AllOutputs.revalidate();
                    myNodeParent.nodeDialog.AllOutputs.repaint();
                    IsGlobal.setEnabled(true);
                    break;
                case "Agent-based Simulation":
                    jPanel1.removeAll();
                    AgentMain agentbasedKernel = new AgentMain(myNodeParent,myNodeParent.inputData);
                    jPanel1.add(agentbasedKernel);
                    myKernel=agentbasedKernel;
                    myNodeParent.nodeDialog.AllOutputs.revalidate();
                    myNodeParent.nodeDialog.AllOutputs.repaint();
                    IsGlobal.setEnabled(true);
                    break;
                case "System dynamics":
                    jPanel1.removeAll();
                    SystemDynamicOutput systemdynamicKernel = new SystemDynamicOutput(myNodeParent,myNodeParent.inputData);
                    jPanel1.add(systemdynamicKernel);
                    myKernel=systemdynamicKernel;
                    myNodeParent.nodeDialog.AllOutputs.revalidate();
                    myNodeParent.nodeDialog.AllOutputs.repaint();
                    IsGlobal.setEnabled(true);
                    break;
                case "Native DLL":
                    jPanel1.removeAll();
                    NativeOutput nativeKernel = new NativeOutput(myNodeParent,myNodeParent.inputData);
                    jPanel1.add(nativeKernel);
                    myKernel=nativeKernel;
                    myNodeParent.nodeDialog.AllOutputs.revalidate();
                    myNodeParent.nodeDialog.AllOutputs.repaint();
                    IsGlobal.setEnabled(true);
                    break;
                case "Custom Java package":
                    jPanel1.removeAll();
                    CustomJavaOutput customjavaKernel = new CustomJavaOutput(myNodeParent,myNodeParent.inputData);
                    jPanel1.add(customjavaKernel);
                    myKernel=customjavaKernel;
                    myNodeParent.nodeDialog.AllOutputs.revalidate();
                    myNodeParent.nodeDialog.AllOutputs.repaint();
                    IsGlobal.setEnabled(true);
                    break;
            }
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void IsGlobalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IsGlobalActionPerformed
        // TODO add your handling code here:
        //myNodeParent.mySteamPanelParent.root_timer.Globals.put(myNodeParent.thisNodeName+"_Output_"+myOrder, myKernel.Output);
        isGlobal=IsGlobal.isSelected();
        myNodeParent.mySteamPanelParent.root_timer.my_root_meta_parent.refreshGlobals();
    }//GEN-LAST:event_IsGlobalActionPerformed

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JCheckBox IsGlobal;
    private javax.swing.JLabel Name;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
