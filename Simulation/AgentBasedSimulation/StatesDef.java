/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Simulation.AgentBasedSimulation;

import java.awt.Color;
import java.util.ArrayList;
import javax.swing.BoxLayout;

/**
 *
 * @author Amir72c
 */
public class StatesDef extends javax.swing.JDialog {

    public ArrayList<StateDetailsDef> stateDetailsDefList = new ArrayList();

    /**
     * Creates new form StatesDef
     */
    public StatesDef(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        statesPanel.setLayout(new BoxLayout(statesPanel, BoxLayout.Y_AXIS));
    }

    public void fillList() {
        statesPanel.removeAll();
        for (int i = 0; i < stateDetailsDefList.size(); i++) {
            statesPanel.add(stateDetailsDefList.get(i));
        }
        statesPanel.revalidate();
        statesPanel.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        statesPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout statesPanelLayout = new javax.swing.GroupLayout(statesPanel);
        statesPanel.setLayout(statesPanelLayout);
        statesPanelLayout.setHorizontalGroup(
            statesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 440, Short.MAX_VALUE)
        );
        statesPanelLayout.setVerticalGroup(
            statesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 271, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(statesPanel);

        jButton1.setText("Add state");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Auto assign colors");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int counter = 1;
        String name = "Nothing" + counter;
        boolean isUnique = false;
        while (isUnique == false) {
            isUnique = true;
            for (int i = 0; i < stateDetailsDefList.size(); i++) {
                if (stateDetailsDefList.get(i).myName.equals(name)) {
                    isUnique = false;
                    counter = counter + 1;
                    name = "Nothing" + counter;
                    break;
                }
            }
        }
        stateDetailsDefList.add(new StateDetailsDef(this, Color.getHSBColor((float) Math.random(), 1, 1), name));
        fillList();
    }//GEN-LAST:event_jButton1ActionPerformed

    public boolean removeStateDetailsDef(String name) {
        for (int i = 0; i < stateDetailsDefList.size(); i++) {
            if (stateDetailsDefList.get(i).myName.equals(name)) {
                stateDetailsDefList.remove(i);
                fillList();
                return true;
            }
        }
        return false;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JPanel statesPanel;
    // End of variables declaration//GEN-END:variables
}
