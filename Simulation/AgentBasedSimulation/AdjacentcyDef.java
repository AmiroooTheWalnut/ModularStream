/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Simulation.AgentBasedSimulation;

import java.awt.Dimension;
import java.awt.Graphics;

/**
 *
 * @author Amir72c
 */
public class AdjacentcyDef extends javax.swing.JDialog {

    /**
     * Creates new form AdjacentcyDef
     */
    public AdjacentcyDef(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        refreshAdjacancy();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ContainerScrol = new javax.swing.JScrollPane();
        ContainerPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        WidthSpinner = new javax.swing.JSpinner();
        HeightSpinner = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        Approve = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout ContainerPanelLayout = new javax.swing.GroupLayout(ContainerPanel);
        ContainerPanel.setLayout(ContainerPanelLayout);
        ContainerPanelLayout.setHorizontalGroup(
            ContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 383, Short.MAX_VALUE)
        );
        ContainerPanelLayout.setVerticalGroup(
            ContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 276, Short.MAX_VALUE)
        );

        ContainerScrol.setViewportView(ContainerPanel);

        jLabel1.setText("Width:");

        WidthSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        WidthSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                WidthSpinnerStateChanged(evt);
            }
        });

        HeightSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        HeightSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                HeightSpinnerStateChanged(evt);
            }
        });

        jLabel2.setText("Height:");

        Approve.setText("Ok");
        Approve.setEnabled(false);
        Approve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApproveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ContainerScrol)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(HeightSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(Approve))
                    .addComponent(WidthSpinner, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(WidthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(HeightSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Approve)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(ContainerScrol))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void WidthSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_WidthSpinnerStateChanged
        // TODO add your handling code here:
        Approve.setEnabled(true);
    }//GEN-LAST:event_WidthSpinnerStateChanged

    private void HeightSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_HeightSpinnerStateChanged
        // TODO add your handling code here:
        Approve.setEnabled(true);
    }//GEN-LAST:event_HeightSpinnerStateChanged

    private void ApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApproveActionPerformed
        // TODO add your handling code here:
        refreshAdjacancy();
        Approve.setEnabled(false);
    }//GEN-LAST:event_ApproveActionPerformed

    
    public void refreshAdjacancy()
    {
        ContainerPanel.removeAll();
        int columnCount=(int)WidthSpinner.getValue();
        int rowCount=(int)HeightSpinner.getValue();
        Graphics g = ContainerPanel.getGraphics();
        PixelAdjacent temp=new PixelAdjacent();
        int total_width=(temp.size+1)*((columnCount*2)+1);
        int total_height=(temp.size+1)*((rowCount*2)+1);
        ContainerPanel.setPreferredSize(new Dimension(total_height,total_width));
        //ContainerScrol.setPreferredSize(new Dimension(total_width,total_height));
        PixelAdjacent allPixels[][]=new PixelAdjacent[(rowCount*2)+1][(columnCount*2)+1];
        for(int i=0;i<(rowCount*2)+1;i++)
        {
            for(int j=0;j<(columnCount*2)+1;j++)
            {
                allPixels[i][j]=new PixelAdjacent();
                allPixels[i][j].setBounds((temp.size+1)*i,(temp.size+1)*j,temp.size,temp.size);
                if (i==rowCount && j==columnCount)
                {
                    allPixels[i][j].isCenter=true;
                }
                ContainerPanel.add(allPixels[i][j]);
            }
        }
        ContainerScrol.revalidate();
        ContainerScrol.repaint();
        ContainerPanel.repaint();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdjacentcyDef.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdjacentcyDef.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdjacentcyDef.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdjacentcyDef.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AdjacentcyDef dialog = new AdjacentcyDef(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Approve;
    public javax.swing.JPanel ContainerPanel;
    private javax.swing.JScrollPane ContainerScrol;
    private javax.swing.JSpinner HeightSpinner;
    private javax.swing.JSpinner WidthSpinner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
